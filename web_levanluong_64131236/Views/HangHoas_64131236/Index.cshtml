@model PagedList.IPagedList<web_levanluong_64131236.Models.HangHoa>
@{
    ViewBag.Title = "Quản lý hàng hóa";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
@using PagedList
@using PagedList.Mvc


@* Add this CSS reference in your layout or view *@
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="container-fluid mt-4">
    <h2 class="text-center mb-4">Quản lý hàng hóa</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <!-- Filter Panel -->
    <div class="card mb-4">
        <div class="card-body">
            @using (Html.BeginForm("Index", "HangHoas_64131236", FormMethod.Get, new { @class = "row g-3" }))
            {
                <div class="col-md-2">
                    <input type="text" name="searchString" class="form-control" placeholder="Tìm kiếm theo tên hoặc mã"
                           value="@ViewBag.CurrentFilter">
                </div>
                <div class="col-md-2">
                    @Html.DropDownList("maLH", (SelectList)ViewBag.LoaiHangs, "-- Chọn loại hàng --",
                        new { @class = "form-select" })
                </div>
                <div class="col-md-2">
                    <input type="number" name="minPrice" class="form-control" placeholder="Giá tối thiểu">
                </div>
                <div class="col-md-2">
                    <input type="number" name="maxPrice" class="form-control" placeholder="Giá tối đa">
                </div>
                <div class="col-md-2">
                    <select name="filterType" class="form-select">
                        <option value="">-- Bộ lọc đặc biệt --</option>
                        <option value="nearExpiry" @(ViewBag.CurrentFilter == "nearExpiry" ? "selected" : "")>Sắp hết hạn (15 ngày)</option>
                        <option value="expired" @(ViewBag.CurrentFilter == "expired" ? "selected" : "")>Đã hết hạn</option>
                        <option value="bestsellers" @(ViewBag.CurrentFilter == "bestsellers" ? "selected" : "")>Bán chạy nhất</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">Lọc</button>
                </div>
            }
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="mb-3 d-flex justify-content-between">
        <div>
            @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-success" })
        </div>
        <div>
            @if (ViewBag.ExpiredCount > 0)
            {
                using (Html.BeginForm("DeleteExpired", "HangHoas_64131236", FormMethod.Post, new { @class = "d-inline" }))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger"
                            onclick="return confirm('Bạn có chắc chắn muốn xóa tất cả sản phẩm đã hết hạn (@ViewBag.ExpiredCount sản phẩm)?');">
                        Xóa tất cả sản phẩm hết hạn (@ViewBag.ExpiredCount)
                    </button>
                }
            }
        </div>
    </div>

    <!-- Products Grid -->
    <!-- Products Grid -->
    <div class="row">
        @foreach (var item in Model)
        {


            <div class="col-md-3 mb-4">
                <div class="card h-100">

                   
                        @if (!string.IsNullOrEmpty(item.AnhHH))
                        {
                            <img src="~/img/@item.AnhHH" class="card-img-top" alt="@item.TenHH"
                                 style="height: 200px; object-fit: cover;">
                        }
                        <div class="card-body">
                            <h5 class="card-title">@item.TenHH</h5>
                            <p class="card-text">
                                <strong>Mã:</strong> @item.MaHH<br>
                                <strong>Giá:</strong> @item.GiaBan.ToString("N0") VNĐ<br>
                                <strong>Tồn kho:</strong> @item.SoLuongHangTon<br>
                                <strong>NSX:</strong> @item.NSX.ToShortDateString()<br>
                                <strong>HSD:</strong> @item.HSD.ToShortDateString()
                                @if (ViewBag.SalesData != null && ViewBag.SalesData.ContainsKey(item.MaHH))
                                {
                                    <br><strong>Đã bán:</strong> @ViewBag.SalesData[item.MaHH]
                                }
                                @if (item.HSD <= DateTime.Now.AddDays(15) && item.HSD > DateTime.Now)
                                {
                                    <br><span class="text-warning">Sắp hết hạn (còn @((item.HSD - DateTime.Now).Days) ngày)!</span>
                                }
                                @if (item.HSD <= DateTime.Now)
                                {
                                    <br><span class="text-danger">Đã hết hạn!</span>
                                }
                            </p>
                        </div>
                    
                    <div class="card-footer bg-transparent">
                        <div class="btn-group w-100">
                            @Html.ActionLink("Sửa", "Edit", new { id = item.MaHH },
                                new { @class = "btn btn-primary btn-sm" })
                            @Html.ActionLink("Chi tiết", "Details", new { id = item.MaHH },
                                new { @class = "btn btn-info btn-sm" })
                            <a href="#" class="btn btn-danger btn-sm"
                               onclick="deleteProduct('@item.MaHH', '@item.TenHH')">
                                Xóa
                            </a>
                        </div>
                    </div>

                </div>

            </div>
        }

        <div class="d-flex justify-content-center">
            @Html.PagedListPager(Model, page => Url.Action("Index",
                new
                {
                    page,
                    sortOrder = ViewBag.CurrentSort,
                    currentFilter = ViewBag.CurrentFilter,
                    maLH = Request.QueryString["maLH"],
                    minPrice = Request.QueryString["minPrice"],
                    maxPrice = Request.QueryString["maxPrice"],
                    filterType = Request.QueryString["filterType"]
                }),
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    UlElementClasses = new string[] { "pagination" },
                    LinkToPreviousPageFormat = "«",
                    LinkToNextPageFormat = "»"
                })
        </div>
    </div>

    @section Scripts {
        <script>
        function deleteProduct(id, name) {
            if (confirm('Bạn có chắc chắn muốn xóa sản phẩm "' + name + '" không?')) {
                $.ajax({
                    url: '@Url.Action("DeleteConfirmed")',
                    type: 'POST',
                    data: {
                        id: id,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            alert('Xóa sản phẩm thành công!');
                            location.reload();
                        } else {
                            alert('Lỗi: ' + result.message);
                        }
                    },
                    error: function () {
                        alert('Đã xảy ra lỗi khi xóa sản phẩm!');
                    }
                });
            }
        }
        </script>
    }
</div>
<style>
    .card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .card-text {
        font-size: 0.9rem;
    }

    .btn-group .btn {
        flex: 1;
    }
</style>